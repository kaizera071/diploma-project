openapi: 3.0.3
info:
  title: Audit System
  version: 1.0.0
  description: The Audit system provides an Audit system REST API meant customers, which is responsible for the recording of audit relevant events for a given tenant. The audit log records written via this Ingestion API can afterwards be retrieved via the Audit Retrieval API.
x-sap-shortText: Provides functionality to write audit logs.
externalDocs:
  description: Audit System - Documentation
  url: https://github.com/kaizera071/diploma-project
tags:
  - name: Audit system API`s
servers:
  - url: http://localhost:8080
    description: Audit system 
paths:
  /ingestion/send:
    post:
      summary: Write a security event audit log
      security:
        - oAuth2ClientCredentials: []
      tags:
        - Audit system API`s
      description: Send a security event as audit log record for persistence
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - audit_event
              properties:
                audit_event:
                  type: object
                  oneOf:
                    - required:
                        - data_access
                      properties:
                        data_access:
                          $ref: '#/components/schemas/data_access'
                    - required:
                        - data_modification
                      properties:
                        data_modification:
                          $ref: '#/components/schemas/data_modification'
                    - required:
                        - configuration_change
                      properties:
                        configuration_change:
                          $ref: '#/components/schemas/configuration_change'
                    - required:
                        - security_event
                      properties:
                        security_event:
                          $ref: '#/components/schemas/security_event'
      responses:
        '201':
          $ref: '#/components/responses/StatusCode201'
        '400':
          $ref: '#/components/responses/StatusCode400'
        '401':
          $ref: '#/components/responses/StatusCode401'
        '403':
          $ref: '#/components/responses/StatusCode403'
        '413':
          $ref: '#/components/responses/StatusCode413'
        '429':
          $ref: '#/components/responses/StatusCode429'
        '500':
          $ref: '#/components/responses/StatusCode500'
        '502':
          $ref: '#/components/responses/StatusCode502'
        '503':
          $ref: '#/components/responses/StatusCode503'
        '504':
          $ref: '#/components/responses/StatusCode504'
  /retrieval/read:
    get:
      summary: Retrieve data based on parameters
      security:
        - oAuth2ClientCredentials: []
      tags:
        - Audit system API`s
      description: Retrieve data within a specified time frame, event type, user, and tenant.
      parameters:
        - in: query
          name: startTime
          required: true
          schema:
            type: string
            format: date-time
            example: "2023-01-01T00:00:00.000Z"
          description: Start time for data retrieval (ISO 8601 format)
        - in: query
          name: endTime
          required: true
          schema:
            type: string
            format: date-time
            example: "2024-03-01T00:00:00.000Z"
          description: End time for data retrieval (ISO 8601 format)
        - in: query
          name: eventType
          required: false
          schema:
            type: string
            enum: 
              - data_access
              - data_modification
              - configuration_change
              - security_event
          description: Type of event to filter by
        - in: query
          name: user
          required: false
          schema:
            type: string
            example: "test-user-3"
          description: User to filter by
        - in: query
          name: tenant
          required: false
          schema:
            type: string
            example: "test-tenant-1"
          description: Tenant to filter by
      responses:
        '201':
          $ref: '#/components/responses/StatusCode201'
        '400':
          description: Bad Request - Invalid input parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid parameter value"
                  details:
                    type: string
                    example: "The 'startTime' parameter is missing or invalid"
                required:
                  - error
                  - details
        '401':
          $ref: '#/components/responses/StatusCode401'
        '403':
          $ref: '#/components/responses/StatusCode403'
        '413':
          $ref: '#/components/responses/StatusCode413'
        '429':
          $ref: '#/components/responses/StatusCode429'
        '500':
          $ref: '#/components/responses/StatusCode500'
        '502':
          $ref: '#/components/responses/StatusCode502'
        '503':
          $ref: '#/components/responses/StatusCode503'
        '504':
          $ref: '#/components/responses/StatusCode504'
components:
  schemas:
    baseEvent:
      type: object
      required:
        - uuid
        - user
        - time
        - tenant
      properties:
        uuid:
          type: string
          example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          description: Unique identifier for an audit log record
        user:
          type: string
          example: test-user
          description: The logged in user that performs the auditable action. To let the server-side extract the user from the JWT token, set the “$USER” string, or to set a custom user, set a custom field.
        time:
          type: string
          example: '1970-01-01T00:00:00.000Z'
          description: The time when the auditable event has been executed. This time is also relevant for filtering during audit log retrieval.
        tenant:
          type: string
          enum:
            - $PROVIDER
            - $SUBSCRIBER
          example: $PROVIDER
          description: The tenant is the identifier of the owner of the audit log message. Each audit log entry could have only single tenant equal to the zone id, that determines the subaccount that is the owner of the message. The audit log record is retrievable only for users in a role that has permissions to read the audit logs for this subaccount. The retention of the audit log message is determined based on the setup retention for this subaccount. For the premium plan, set the string “$PROVIDER”, which will let the servers extract the tenant zone id automatically from the used JWT token.
    data_object:
      type: object
      minItems: 1
      description: Field also known as 'object'. The unique identificatory for the location where the personal data that is being accessed or modified in case of Log read access to sensitive personal data events and Log changes to personal data, as well as the unique identificatory of the location and configuration that is being changed.
      properties:
        type:
          type: string
          description: The type of location for the object
          example: Online system
        id:
          type: object
          additionalProperties:
            type: string
            description: Set of object identifiers with values
          properties:
            sampleIdentifierName:
              type: string
              example: sampleIdentifierValue
              description: An example for an object identifier. This identifier has only example purpose, it is not a required identifier.
      required:
        - id
    baseAttributes:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
        required:
          - name
    attributes:
      allOf:
        - $ref: '#/components/schemas/baseAttributes'
      type: array
      description: The list of attributes that are either added or deleted or modified.
      minItems: 1
      items:
        type: object
        properties:
          old:
            type: string
          new:
            type: string
        required:
          - old
          - new
    data_subject:
      type: object
      minItems: 1
      description: The persona that is the owner of the personal data that is being accessed or modified in Log read access to sensitive personal data events and Log changes to personal data.
      properties:
        type:
          type: string
          description: The type of the data subject
          example: credentials
        role:
          type: string
          description: The role of the data subjet
          example: authentication
        id:
          type: object
          additionalProperties:
            type: string
            description: Set of object identifiers with values
          properties:
            username:
              type: string
              example: testUser
              description: An example for a subject identifier. This identifier has only example purpose, it is not a required identifier.
      required:
        - id
    data_access:
      type: object
      allOf:
        - $ref: '#/components/schemas/baseEvent'
        - type: object
          required:
            - attributes
          properties:
            identityProvider:
              type: string
              example: $IDP
            object:
              $ref: '#/components/schemas/data_object'
            data_subject:
              $ref: '#/components/schemas/data_subject'
            attributes:
              allOf:
                - $ref: '#/components/schemas/baseAttributes'
              type: array
              items:
                type: object
                properties:
                  successful:
                    type: boolean
            customDetails:
              type: object
              description: description of the custom elements added
    data_modification:
        allOf:
        - $ref: '#/components/schemas/baseEvent'
        - type: object
          required:
            - attributes
          properties:
            object:
              $ref: '#/components/schemas/data_object'
            data_subject:
              $ref: '#/components/schemas/data_subject'
            attributes:
              $ref: '#/components/schemas/attributes'
            customDetails:
              type: object
              description: description of the custom elements added
    configuration_change:
        allOf:
        - $ref: '#/components/schemas/baseEvent'
        - type: object
          required:
            - attributes
          properties:
            id:
              type: string
              example: ffffffff-aaaa-bbbb-cccc-dddddddddddd
            object:
              $ref: '#/components/schemas/data_object'
            attributes:
              $ref: '#/components/schemas/attributes'
            customDetails:
              type: object
              description: description of the custom elements added
    security_event:
        allOf:
        - $ref: '#/components/schemas/baseEvent'
        - type: object
          required:
            - data
          properties:
            data:
              type: string
              example: security event message
              description: The message that contains the needed information for the logged security event
            identityProvider:
              type: string
              example: $IDP
              description: The used identity provider
            ip:
              type: string
              example: 192.168.0.1
              description: The IP where the audited security relevant event has been executed
            attributes:
              allOf:
                - $ref: '#/components/schemas/baseAttributes'
              type: array
              description: The list of optional attributes that are either added or deleted or modified.
              items:
                type: object
                properties:
                  value:
                    type: string
                required:
                  - value
            customDetails:
              type: object
              description: description of the custom elements added
  responses:
    StatusCode201:
      description: Audit log successfully created
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                example: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
    StatusCode400:
      description: URI syntax error, Invalid attributes, Cannot parse the received audit log message, Connection shutdown
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                type: string
                example: '''user'' property cannot be null'
    StatusCode401:
      description: Missing or invalid "Authorization" header
    StatusCode403:
      description: Request forbidden by administrative rules
    StatusCode413:
      description: The audit log message size exceeds 10KB
    StatusCode429:
      description: Rate limit per tenant is hit
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: '429'
                  message:
                    type: string
                    example: Too many requests
                  target:
                    type: string
                    example: /send
    StatusCode500:
      description: If an unexpected exception occurred
    StatusCode502:
      description: Load balancer issue
    StatusCode503:
      description: Global rate limit is
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: string
                    example: '503'
                  message:
                    type: string
                    example: The service instance rate limit was hit!
                  target:
                    type: string
                    example: /send
    StatusCode504:
      description: Load balancer issue
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      description: Oauth2 JWT token exchange using X509 Client Certificates
      flows:
        clientCredentials:
          tokenUrl: https://dev-npnifdzb4nunlzn6.us.auth0.com/oauth/token
          scopes: {}
security:
  - oAuth2ClientCredentials: []
